# docker-compose.yml
# version: '3.8'

services:
  app:
    build: .
    # image: gexdata:latest
    env_file:
      - .env_docker
    environment:
      - PG_REGION=postgres
    ports:
      - "9999:8000"
    depends_on:
      postgres:
        condition: service_healthy
      # mongo:
      #   condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 3s
      retries: 3
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "8432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 5
volumes:
  postgres_data:
networks:
  backend:
    driver: bridge
